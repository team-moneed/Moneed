# ==============================================
# GitHub Secrets 설정 가이드
# ==============================================
# GitHub Repository > Settings > Secrets and variables > Actions

# ==============================================
# Vercel 배포용 Secrets
# ==============================================

# VERCEL_TOKEN
# - Vercel Dashboard > Settings > Tokens에서 생성
# - 예시: vercel_token_abc123...

# VERCEL_ORG_ID  
# - Vercel Dashboard > Settings > General > Team ID
# - 예시: team_abc123...

# VERCEL_PROJECT_ID
# - Vercel Project > Settings > General > Project ID  
# - 예시: prj_abc123...

# ==============================================
# AWS EC2 배포용 Secrets
# ==============================================

# EC2_HOST
# - EC2 인스턴스의 퍼블릭 IP 또는 도메인
# - 예시: 123.456.789.012 또는 api.moneed.com

# EC2_USER
# - EC2 인스턴스 SSH 사용자명
# - 예시: ubuntu, ec2-user

# EC2_SSH_KEY
# - EC2 인스턴스 접속용 프라이빗 키 (전체 내용)
# - 예시: -----BEGIN RSA PRIVATE KEY-----\nMIIE...

# EC2_SSH_PORT (선택사항)
# - SSH 포트 (기본값: 22)
# - 예시: 22

# ==============================================
# 선택적 Secrets (코드 품질/보안)
# ==============================================

# CODECOV_TOKEN (선택사항)
# - 코드 커버리지 리포팅용
# - codecov.io에서 생성

# ==============================================
# 환경변수 설정 명령어 (GitHub CLI 사용 시)
# ==============================================

# GitHub CLI로 한번에 설정하는 방법:
# gh secret set VERCEL_TOKEN --body "your_vercel_token"
# gh secret set VERCEL_ORG_ID --body "your_org_id"  
# gh secret set VERCEL_PROJECT_ID --body "your_project_id"
# gh secret set EC2_HOST --body "your_ec2_host"
# gh secret set EC2_USER --body "ubuntu"
# gh secret set EC2_SSH_KEY --body "$(cat ~/.ssh/your-key.pem)"

# ==============================================
# 보안 주의사항
# ==============================================

# 1. SSH 키는 절대 코드에 포함하지 말 것
# 2. 프로덕션과 개발 환경의 키를 분리할 것
# 3. 정기적으로 토큰과 키를 로테이션할 것
# 4. 최소 권한 원칙을 적용할 것
